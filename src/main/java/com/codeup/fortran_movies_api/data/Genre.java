package com.codeup.fortran_movies_api.data;
import javax.persistence.*;
import java.util.List;


@Entity
@Table(name = "genres")
public class Genre {

//    ----- Fields for genres -----
    @Id // -Indicates that the field  below is the primary key of the current entity
    @GeneratedValue(strategy = GenerationType.IDENTITY) // -This type of generation relies on the IdentityGenerator,
    // which expects values generated by an identity column in the database. This means they are auto-incremented.
    private int id;
    private String name;

    //    ----- Creating many to many relationship between genre and movies -----
    @ManyToMany
    // ----- Joining movie_genre table and Movie will implement this too -----
    //      We need to think about which is the "owning" side, which one is responsible for the other?
    //      For ex: if we delete a movie we dont want to delete the genre out of the genre table
    //      This will ensuer hibernate wont do weird stuff
    @JoinTable(name = "movie_genre",
            joinColumns =
                    @JoinColumn(name = "genre_id"), // the movie_genre genre_id column is a foreign key referencing movies (id) (think that it's just like our FOREIGN KEY SQL statement)
            inverseJoinColumns =
                    @JoinColumn(name = "movie_id") // the movie_id is a foreign key referencing movies (id)
    )


    //    ----- Bringing in List of movies -----
    List<Movie> movies;

//    ----- constructor -----
    public Genre(int id, String name) {
        this.id = id;
        this.name = name;
    }

    public Genre(String name) {
        this.name = name;
    }

//    ----- Getters & Setters -----

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

//    DON'T FORGET YOUR GETTER! Or else, the list of movies won't serialize
    public List<Movie> getMovies() {
        return movies;
    }

    @Override
    public String toString() {
        return "Genre{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", movies=" + movies +
                '}';
    }
}
